[print(('Решка', 'Орел')[__import__('random').randint(0, 1)]) for _ in range(10)]

""" Если кратко, то код работает следующим образом:

код нужно поделить на составляющие:

        1 тут есть генератор - for _ in range(10)

        2 условие if __import__('random').randint(0, 1):

        3 печать(вывод) результата print(('Решка', 'Орел')

Теперь о том как это все работает

    1 цикл работает 10 раз благодаря генератору , который для понимания можно записать так (уверен Вы с этой записью знакомы)

[print('Привет Мир!') for _ in range(10)]
     это отличается от  записи [print(i) for i in range(10)],  уверен вы понимаете почему  - нам не нужна переменная генератора дальше в коде - просто цикл выполняется 10 раз и выводит нам 10 раз Привет Мир! А в нашем случае нечто другое  - делает 10 раз выполнение этого блока кода print(('Решка', 'Орел')[__import__('random').randint(0, 1)])

    2 Следующий этап то что находится у нас в принте :

print(('Решка', 'Орел')[__import__('random').randint(0, 1)])
        Работает следующем образом:

print(('No', 'Yes')[Условие блока if])
                2.1 Если условие истинно,  то получаем Yes,  если же оно не выполняется - то No

                2.2 Таким образом [__import__('random').randint(0, 1)] запись аналогична - if random.randint(0, 1) - если выпадает 1 (True) - условие выполняется  и мы получаем Орла)))),  если нет то Решку.

('Решка', 'Орел')[__import__('random').randint(0, 1)])
Эта запись, могу ошибиться, т к совсем недавно увлекся программированием и еще не до конца сведущ, отсылает нас к С языку (альфа матер всего, наверное, остального, в том силе и Python)

3 импорт функции:

__import__('random').randint(0, 1)
Не очень хороший пример записи но так можно( но наверное не нужно) аналог  from random import randit

__import__('импортируем из').что_импортируем(аргументы функции)
 

Надеюсь объяснил как смог, если что не закидывайте больно камнями)))) """